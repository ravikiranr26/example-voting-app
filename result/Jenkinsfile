pipeline {
    
    agent none

    stages {
        stage('build') {
            agent {
                docker {
                    image 'node:8.16.0-alpine'
                }
            }
            when {
                changeset "**/result/**"
            }
            steps {
                echo 'Compiling the Result app'
                dir('result') {
                     sh 'npm install'
                }
            }
        }
        stage('test') {
            agent {
                docker {
                    image 'node:8.16.0-alpine'
                }
            }
            when {
                changeset "**/result/**"
            }
            steps {
                echo 'Running the Unit tests on Result App'
                dir('result') {
                     sh 'npm install && npm test'
                }
            }
        }
        stage('docker-package') {
            agent any
            when {
                branch 'master'
                changeset "**/result/**"
            }
            steps {
                echo 'Packaging the result app with docker.'
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {
                        def workerImage = docker.build("rknmit/result:v${env.BUILD_ID}", "./result")
                        workerImage.push()
                        workerImage.push("${env.BRANCH_NAME}")
                    }
                }
            }
        }
    }
    
    post  {
        always {
            echo 'pipeline for result run is completed'
        }
        failure {
            slackSend (channel: "instavote-cd", message: "Build Failed: ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")    
         }
        success {
            slackSend (channel: "instavote-cd", message: "Build Success: ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
    }
}
